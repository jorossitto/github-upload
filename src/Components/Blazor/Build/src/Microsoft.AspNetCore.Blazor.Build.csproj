<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>$(DefaultNetCoreTargetFramework)</TargetFramework>
    <Description>Build mechanism for ASP.NET Core Blazor applications.</Description>
    <OutputType>Exe</OutputType>
    <IsShippingPackage>true</IsShippingPackage>
    <HasReferenceAssembly>false</HasReferenceAssembly>
  </PropertyGroup>

  <!-- Pack settings -->
  <PropertyGroup>
    <!-- Producing this package requires building with NodeJS enabled. -->
    <IsPackable Condition="'$(BuildNodeJS)' == 'false'">false</IsPackable>
    <GenerateNuspecDependsOn>$(GenerateNuspecDependsOn);Publish</GenerateNuspecDependsOn>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <NuspecFile>Microsoft.AspNetCore.Blazor.Build.nuspec</NuspecFile>
  </PropertyGroup>

  <ItemGroup>
    <NuspecProperty Include="configuration=$(Configuration)" />
    <NuspecProperty Include="publishDir=$(PublishDir)" />
    <NuspecProperty Include="componentsversion=$(ComponentsPackageVersion)" />
    <NuspecProperty Include="razorversion=$(MicrosoftAspNetCoreRazorDesignPackageVersion)" />
    <NuspecProperty Include="blazormonoversion=$(MicrosoftAspNetCoreBlazorMonoPackageVersion)" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Condition="'$(BuildNodeJS)' != 'false' and '$(BuildingInsideVisualStudio)' != 'true'" Include="$(RepoRoot)src\Components\Web.JS\Microsoft.AspNetCore.Components.Web.JS.npmproj" ReferenceOutputAssembly="false" />
    <Reference Include="Microsoft.AspNetCore.Components" />
    <Reference Include="Microsoft.Extensions.CommandLineUtils.Sources" />
    <Reference Include="Microsoft.Extensions.FileProviders.Composite" />
    <Reference Include="Microsoft.Extensions.FileProviders.Physical" />
    <Reference Include="Mono.Cecil" />
    <Reference Include="System.CodeDom" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\..\..\Shared\src\JsonSerializerOptionsProvider.cs" />
  </ItemGroup>
</Project>
